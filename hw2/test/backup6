#! /bin/sh
check()
{
if [ $# -eq 0 ]; then #if no arguments are passed in
	dir="."
        echo $dir
        cd $dir
        file=`ls`
	echo $file
        for i in $file
        do
              checkrest "$i"
        done
elif [ $# -eq 1 ]; then
	if [ -d "$1" ]; then
		temp=$1		
		valid="f"
		input $temp
		echo $valid
		if [ $valid == "t" ] ; then	
			dir=$1 
			echo $dir
			cd $dir
			file=`ls`			
			echo $file
			for i in $file
			do
				checkrest "$i"
			done
					
		fi
	else
		#error "$1" 
		exit 126
	fi		 
else
	for i in "$@"
	do
		 error "$i"
	done
	exit 126 # this iwill be failure status exit code	 
fi
}
checkrest()
{
if [ -f "$1" ]; then
	properSyntax $1
	exceptions $1
	if [ $valid == "f" ] && [ fileEx == "t" ]; then
		echo $dir"/"$1
	fi
elif [ -d "$1" ]; then
	properSyntax $1
	if [ $valid == "t" ]; then
		for i in "$1"/*
		do		
			checkrest "$i"
		done
	fi
fi
}
properSyntax()
{
valid="f"
if ! [[ -r $1 ]]; then
	echo noread
	echo $dir"/"$1
	return
fi
local new=""
for (( i=0; i<${#1}; i++ )); do
  if [ ${1:$i:1} != "/" ]; then
        new=$new${1:$i:1}
  else
        new=""
  fi
done
if [[ $new =~ [^A-Za-z_.\-] ]]; then
	echo returned 1
	echo $dir"/"$1
	return
elif [[ ${#new} -gt 14 ]]; then
	echo returned 2
	echo $dir"/"$1
	return
elif [[ $new =~ ^- ]]; then
	echo returned 3
	echo $dir"/"$1
	return
elif [[ $new == "." ]] || [[ $1 == ".." ]]; then 
	echo returned 4
	valid="t"
	return
elif [[ $new =~ ^\. ]]; then
	echo returned 5
	echo $dir"/"$1
	return
fi
valid="t"
}
exceptions()
{
fileEx="f"
if [[ $1 =~ [[A-Z][a-z]\.,-\s_\*] ]]; then
        fileEx="t"
elif [[ $1 =~ ^- ]]; then
        fileEx="t"
fi
}

input()
{
local new=""
for (( i=1; i<${#temp}; i++ )); do
  if [ ${temp:$i:1} != "/" ]; then
	new=$new${temp:$i:1}
  elif [[ $new =~ ^[^-][^/]*$ ]]; then #probably code here that calls propersyntax for new
	valid="t"
	new=""		
  else 
	valid="f"
	break
  fi
done
}
error()
{
  awk " BEGIN { print \"$@\" > \"/dev/fd/2\" }"
}
check "$@"
#check()
#{
#	if [-f]
#	then
#	elif [-d "$1"]
#	then
#		for i in "$1"/*
#		do
#			foo "$i"
#		done
#	fi
#}	
#check "$dir"
