Q1. Does the patch improve the performance of ls or make it worse? 
Briefly explain.
The patch improves the performance of ls because now it does what it is supposed
to and makes sure -a doesn't always override -A. However the correct version
appears to be "slower" than the version with a bug. I used the time 
command to test both the correct version and the version with the bug and the 
correct version runs an average of 0m0.004s for the real portion and the
version with the bug runs with an average of 0m0.003s.

Q2. If your company adopts this patched version of Coreutils instead of the 
default one, what else should you watch out for? Might this new version of 
Coreutils introduce other problems with your application?
The patch file may have fixed the bug with ls but it may have introduced other 
bugs along with it that were not apparent with just testing the ls command. 
Additionally this fixed version is slightly slower than the version with a 
bug so that may affect things to some degree.

Q3. What happens when this script is invoked on an empty file like /dev/null, 
and why?
When this script is invoked on an empty file like /dev/null there is an error 
that says the input is out of range, because there are no lines in an empty file
and thus you cannot print ie. five random lines from no lines.

Q4. What happens when this script is invoked with Python 3 rather than Python 2,
and why? (You can run Python 3 on the SEASnet hosts by using the command python3
instead of python.)
When the script is invoked with Python 3 rather than Python 2, there is a syntax
error because Python 3 and Python 2 have slightly different syntaxes which might
not be compatible with both versions.
