I first went into the /usr/bin directory and ran ./ls -aA and found out that 
the . and .. are still listed out. The I used /usr/bin/ls --version to check
that it corresponded to coreutils version 8.22
1. Grab the Coreutils 8.29 source code compressed tarball and verify its 
signature with the GNU keyring by running the shell command 
gpg --verify --keyring ./gnu-keyring.gpg coreutils-8.29.tar.xz.sig in your 
directory. Note any problems with this verification, and briefly explain why 
they happen.
using commands 
wget ftp://ftp.gnu.org/gnu/coreutils/coreutils-8.29.tar.x
wget ftp://ftp.gnu.org/gnu/coreutils/coreutils-8.29.tar.xz.sig  
wget https://ftp.gnu.org/gnu/gnu-keyring.gpg 
I verified the signature and got this result:
gpg: Signature made Wed 27 Dec 2017 10:29:05 AM PST using RSA key ID 306037D9
gpg: Good signature from "Pádraig Brady <P@draigBrady.com>"
gpg:                 aka "Pádraig Brady <pbrady@redhat.com>"
gpg:                 aka "Pádraig Brady <pixelbeat@gnu.org>"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 6C37 DC12 121A 5006 BC1D  B804 DF6F D971 3060 37D9

The warning may be due to the fact that this is a public key that was not
verified/trusted.

2. Compile and install your copy of Coreutils into a temporary directory of your
own. Note any problems you run into.
I extracted the files using tar -xJvf coreutils-8.29.tar.xz and found a new
directory was created called coreutils-8.29, so I went into that directory. 
Then I read the README file which told me to read the INSTALL file for 
compilation and installation instructions if I got the file from a tar archive. 
The INSTALL file said using ./configure, make, and make install should
configure, build, and install the package.
the commands I used were: 
cat README
cat INSTALL
./configure -prefix=/u/cs/ugrad/molly/hw3
make (to compile) 
make install (to install)
This created the directories bin, libexec and share in the path I specified.
 
3. Reproduce the bug on your machine with the unmodified version of coreutils.
The test case that comes with the patch should give you ideas for how to 
reproduce the bug.
I reproduced the bug by going into the bin directory that was created and 
used the command 
 ./ls -aA 
The . and .. directories were listed out as they are supposed to for the bug.

4. Apply the patch of Bug#30963 Message #10. Note any problems that occur (they
should not prevent the modified coreutils from working).
I then got the patch by copying and pasting it into a file and using that file
to patch: 
vim patch_file
patch -p1 <patch_file
I used -p1 because in the patchfile for example they had --- a/tests/local.mk
+++ b/tests/local.mk, but since I was in the coreutils-8.29 directory with 
"tests" the a/ could be taken out with -p1. I was unable to patch NEWS and 
a reject file was created because the source file was absent, but that should 
not prevent the modified coreutils from working because it is just the NEWS 
portion.

5. Type the command make at the top level of your source tree, so that you 
build the fixed version, without installing it into your temporary directory. 
For each command that gets executed, explain why it needed to be executed (or 
say that it wasn't neeeded).
I built the fixed version by first using the command 
"autoreconf" to update generated configuration files and "make" in the 
coreutils-8.29 directory that compiled the fixed version of ls. I did not use
make install so I could still test the buggy version.

6. Make sure your change fixes the bug, by testing that the modified ls works on
the same tests where the unmodified ls didn't work. 
I tested to make sure the bug was fixed by testing on the same path. 
I first went into the src directory with the fixed version and ran the command 
./ls -aA /u/cs/ugrad/molly/hw3
which did not output the . and .. 
similarly I tested on the same path with -a, -Aa, and -A as well
then I went back to the bin directory that holds the version with the bug and
ran the command 
./ls -aA /u/cs/ugrad/molly/hw3 
which outputted the . and ..
similarly I tested on the same path with -a, -Aa, and -A as well
Thus I verified the bug was fixed.


