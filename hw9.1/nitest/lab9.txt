1. I got a copy of the Diffutils repos with 
$git clone ~eggert/src/gnu/diffutils 
this created the repos in a directory called diffutils.

2. I got a log of changes to Diffutils' master branch and put it into git-log.txt
$cd diffutils
$git log > git-log.txt

3. I then generated a list of tags used for Diffutils using
$git tag > git-tags.txt

4. I then found the commit entitled maint: quote 'like this' or "like this",
not `like this'
$cat git-log.txt |grep -B10 "maint: quote"
and found the commit hash number to be 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
I then generated a patch for that commit by putting it into quote-patch.txt
$git show 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f >quote-patch.txt

5. I then checked out version 3.0 of Diffutils from my repository. Since v3.0 
is a tag I can do:
$git checkout v3.0
which outputs:
Note: checking out 'v3.0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 022cd5c... version 3.0
6. I applied the patch to version 3 and after checking what number for the p
flag I shoudl have, since I was in the directory with TODO and cfg.mk I used
the p1 flag since the patch file contained the paths a/TODO, b/TODO and a/cfg.mk and b/cfg.mk.
$patch -p1 <quote-patch.txt
I was not able to find the HACKING file so I typed RETURN and y to skip the patch, this also happened for doc/diffutils.texi and man/help2man. There were also 
some parts of the patch that failed (will paste the output of the patch at end
of this text file).

7. I got an overview of what happened by
$git status 
[molly@lnxsrv06 ~/cs35l/hw9/diffutils]$ git status
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   NEWS
        modified:   README
        modified:   TODO
        modified:   doc/diagmeet.note
        modified:   ms/config.bat
        modified:   ms/config.site
        modified:   po/en.po
        modified:   src/analyze.c
        modified:   src/cmp.c
        modified:   src/context.c
        modified:   src/diff.c
        modified:   src/diff.h
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/ifdef.c
        modified:   src/io.c
        modified:   src/sdiff.c
        modified:   src/side.c
        modified:   src/system.h
        modified:   src/util.c
        modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        NEWS.orig
        README-hacking.orig
        README-hacking.rej
        README.orig
        README.rej
        cfg.mk.orig
        cfg.mk.rej
        git-log.txt
        git-tags.txt
        ms/config.site.orig
        quote-patch.txt
        src/cmp.c.orig
        src/context.c.orig
        src/diff.c.orig
        src/diff.c.rej
        src/diff.h.orig
        src/diff3.c.orig
        src/diff3.c.rej
        src/dir.c.orig
        src/sdiff.c.orig
        src/system.h.orig
        src/util.c.orig
        tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8/9: I went through the list from git status and reverted all the changes on the
modified files that were not .c files.
and ran the following commands after entering emacs:
C-x v u (to revert)
Discard changes in /u/cs/ugrad/molly/diffutils/README?
yes (to changes)
C-x C-c (save and quit)
$emacs NEWS
$emacs README
$emacs TODO
$emacs doc/diagmeet.note
$emacs ms/config.bat
$emacs ms/config.site
$emacs po/en.po
$emacs src/diff.h
$emacs src/system.h
$emacs test/help-version

I then reversed all the hunks that only applied changes to the comments.
I ran the following commands after entering emacs for all the .c files:
C-x v = (to open the *vc-diff* buffer)
C-u C-c C-a (to reverse hunks)
C-x C-c y (exit and save)
$emacs src/analyze.c
$emacs src/cmp.c
$emacs src/context.c
$emacs src/diff.c
$emacs src/diff3.c
$emacs src/dir.c
$emacs src/ifdef.c
$emacs src/io.c
$emacs src/sdiff.c
$emacs src/side.c
$emacs src/util.c
To navigate between hunks I used M-n M-p and to see the source code surrounding
the hunks I used C-c C-c and C-x o to switch back to the generated *vc-diff* buffer.

Some of the reverted hunks caused the whole file to be reverted back.
After I finished all of 9 I ran git status again to see that I was only left
with src/ cmp.c, diff.c, diff3.c, dir.c, sdiff.c, and util.c.

10. I used emacs to examine the files src/*.c.rej and copy rejected patches
into the corresponding .c files as needed. 
$emacs src/diff3.c.rej
$emacs src/diff.c.rej
I opened another terminal to compare side by side
$emacs src/diff3.c
$emacs src/diff.c
for diff3 there was only one hunk and I saw that this hunk was at line 433
so I went to the .c file and did:
M-g g 433
Upon doing this I found out the line did not correspond to the text in the .rej
file and instead was a few lines off so I manually changed the ` to ' and saved
the file. 
for diff there were multiple hunks and I repeated the same process but it was 
difficult for me to find the line in the reject file using the method for diff3
so I used:
M-< ( to go to the front of the file
C-s <keywords in the lines of the .rej file> (to search for the line)
and applied the changes manually for each hunk.

11. I find the command to remove all untracked files that git status warns me
about with:
man git
(man) /untracked
and find the command git clean.
I run the command but get a fatal error message that required me to specify a 
flag. I check what flag I should put with:
man git clean 
and find that I need either a -f or -n (but I choose -f since -n doesn't
actually remove the files)
$git clean -f 

12. I run git status and git diff
$git status (6 files were listed)
$git diff > quote-3.0-patch.txt
$cat quote-3.0.patch.txt | wc (verified patch was 326 lines)

13. I open README-hacking and it tells me to perform the steps
$./bootstrap
I checked my version of the GNU C Library
ldd --version (2.17)
so I have to apply the patch
$wget http://web.cs.ucla.edu/classes/spring19/cs35L/assign/diffutils-gets.diff
$mv diffutils-get.diff  ~/cs35l/hw9
$cd lib
$patch -p1 < ~/cs35l/hw9/diffutils-get.diff
$cd ..
Then I complete the steps from the README
$./configure
$make
$make check
I check that the changes have been applied
$diff . - 
diff: cannot compare '-' to a directory
$diff --help
....a lot of stuff ...
FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE...' or 'FILE... DIR'.
If --from-file or --to-file is given, there are no restrictions on FILE(s).
If a FILE is '-', read standard input.
Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.
These results show me that single quotes are used instead of grave accents as
required.

14. I put the original source code of version 3 and the modified source code of version 3 into diffutils-3.0 and diffutils-3.0-patch respectively. 
$git add . (add the changes to staging area)
$git commit -m "grave patch" (commits the changes with the message grave patch)
$git checkout -b patch (creates a branch called patch)
$cp -r src ../diffutils-3.0-patch (copies the src dir to parent directory)

$git checkout v3.0 (switches to version 3)
$cp -r src ../diffutils-3.0 (copies the src dir (from original v3 to parent dir)
$git checkout patch (switches back to branch with modified diff)
$cd .. (goes to parent dir)
$diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch > quote-3.0-test.txt
(checks difference between the original src directory of version 3 and the 
modified src directory of version 3 after the applied patch)

15. Using diff to compare quote-3.0-test.txt and quote-3.0-patch.txt (I used
tr -d '+-' to put two temp files without '+-' to perform diff -u on so I could
more easily tell which lines were different) I found out that the two files 
were not identical, however these differences were innocuous because
some of the hunk headers contained different file paths. A good chunk of the
patch lines also appeared to be different from the large amounts of '+-' next
to the line but upon closer inspection these two large chunks were the same
so they were most likely just located in different places in the files.
Besides for that there were just a couple of characters in some of the function
that were cut off in quote-3.0-test.txt.

from Q6
[molly@lnxsrv06 ~/cs35l/hw9/diffutils]$ patch -p1 <quote-patch.txt
can't find file to patch at input line 35
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
|Author: Paul Eggert <eggert@cs.ucla.edu>
|Date:   Wed Jan 25 23:46:16 2012 -0800
|
|    maint: quote 'like this' or "like this", not `like this'
|
|    This is in response to a recent change in the GNU coding standards,
|    which now suggest quoting 'like this' or "like this", instead of
|    `like this' or ``like this''.
|    * HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
|    * doc/diffutils.texi, ms/config.bat, ms/config.site:
|    * src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
|    * src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
|    * src/sdiff.c, src/side.c, src/system.h, src/util.c:
|    * tests/help-version:
|    Quote 'like this' or "like this" in commentary.
|    * cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
|    * man/help2man: Update to 1.40.4 version, with quoting fixed as above.
|    * po/en.po: Remove translation involving `, as it's no longer needed.
|    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
|    * src/diff.c (main, try_help, option_help_msgid, specify_value)
|    (compare_files):
|    * src/diff3.c (main, try_help, option_help_msgid, usage)
|    (read_diff):
|    * src/dir.c (compare_names):
|    * src/sdiff.c (try_help, usage, check_child_status, main):
|    * src/util.c (finish_output):
|    * tests/help-version:
|    Quote 'like this' in output.
|
|diff --git a/HACKING b/HACKING
|index 3a99833..522e0b5 100644
|--- a/HACKING
|+++ b/HACKING
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
patching file NEWS
Hunk #1 succeeded at 30 (offset -28 lines).
Hunk #2 succeeded at 66 (offset -28 lines).
Hunk #3 succeeded at 106 (offset -28 lines).
Hunk #4 succeeded at 140 (offset -28 lines).
Hunk #5 succeeded at 184 (offset -28 lines).
Hunk #6 succeeded at 197 (offset -28 lines).
Hunk #7 succeeded at 209 (offset -28 lines).
Hunk #8 succeeded at 221 (offset -28 lines).
patching file README
Hunk #1 FAILED at 9.
Hunk #3 FAILED at 60.
2 out of 3 hunks FAILED -- saving rejects to file README.rej
patching file README-hacking
Hunk #1 FAILED at 19.
1 out of 1 hunk FAILED -- saving rejects to file README-hacking.rej
patching file TODO
patching file cfg.mk
Hunk #1 FAILED at 29.
1 out of 1 hunk FAILED -- saving rejects to file cfg.mk.rej
patching file doc/diagmeet.note
can't find file to patch at input line 222
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/doc/diffutils.texi b/doc/diffutils.texi
|index 58b140c..00403df 100644
|--- a/doc/diffutils.texi
|+++ b/doc/diffutils.texi
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
can't find file to patch at input line 235
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/man/help2man b/man/help2man
|index f9983f7..8bc961c 100755
|--- a/man/help2man
|+++ b/man/help2man
--------------------------
File to patch: RETURN
RETURN: No such file or directory
Skip this patch? [y] y
Skipping patch.
9 out of 9 hunks ignored
patching file ms/config.bat
patching file ms/config.site
Hunk #1 succeeded at 73 with fuzz 1.
patching file po/en.po
patching file src/analyze.c
patching file src/cmp.c
Hunk #1 succeeded at 36 with fuzz 1.
Hunk #4 succeeded at 185 (offset -6 lines).
Hunk #5 succeeded at 231 (offset -6 lines).
Hunk #6 succeeded at 257 (offset -6 lines).
Hunk #7 succeeded at 269 (offset -6 lines).
Hunk #8 succeeded at 364 (offset -6 lines).
Hunk #9 succeeded at 377 (offset -6 lines).
patching file src/context.c
Hunk #1 succeeded at 159 (offset 1 line).
Hunk #2 succeeded at 289 (offset 1 line).
Hunk #3 succeeded at 393 with fuzz 2 (offset 1 line).
Hunk #4 succeeded at 431 (offset 1 line).
Hunk #5 succeeded at 459 (offset 1 line).
patching file src/diff.c
Hunk #1 succeeded at 40 with fuzz 2 (offset -2 lines).
Hunk #2 succeeded at 57 (offset -2 lines).
Hunk #3 succeeded at 92 (offset -2 lines).
Hunk #4 succeeded at 330 (offset -10 lines).
Hunk #5 succeeded at 505 (offset -10 lines).
Hunk #6 succeeded at 534 (offset -10 lines).
Hunk #7 succeeded at 585 (offset -14 lines).
Hunk #8 succeeded at 744 (offset -14 lines).
Hunk #9 succeeded at 826 (offset -14 lines).
Hunk #10 FAILED at 876.
Hunk #11 FAILED at 906.
Hunk #12 FAILED at 942.
Hunk #13 succeeded at 960 with fuzz 2 (offset -29 lines).
Hunk #14 succeeded at 1159 with fuzz 2 (offset -32 lines).
3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
patching file src/diff.h
Hunk #2 succeeded at 126 with fuzz 2 (offset -13 lines).
Hunk #3 succeeded at 202 (offset -13 lines).
patching file src/diff3.c
Hunk #1 succeeded at 35 (offset 1 line).
Hunk #2 succeeded at 159 (offset 1 line).
Hunk #3 succeeded at 316 (offset 1 line).
Hunk #4 succeeded at 351 (offset 1 line).
Hunk #5 succeeded at 412 (offset 1 line).
Hunk #6 FAILED at 433.
Hunk #7 succeeded at 460 with fuzz 2 (offset -18 lines).
Hunk #8 succeeded at 1275 (offset -18 lines).
Hunk #9 succeeded at 1475 (offset -18 lines).
1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej
patching file src/dir.c
Hunk #1 succeeded at 84 (offset -1 lines).
Hunk #2 succeeded at 125 (offset -1 lines).
Hunk #3 succeeded at 154 (offset -1 lines).
Hunk #4 succeeded at 234 (offset -1 lines).
patching file src/ifdef.c
patching file src/io.c
patching file src/sdiff.c
Hunk #2 succeeded at 92 (offset 1 line).
Hunk #3 succeeded at 175 (offset 23 lines).
Hunk #4 succeeded at 230 (offset 17 lines).
Hunk #5 succeeded at 286 (offset 17 lines).
Hunk #6 succeeded at 572 (offset 13 lines).
Hunk #7 succeeded at 747 (offset 41 lines).
patching file src/side.c
patching file src/system.h
Hunk #2 succeeded at 105 (offset 6 lines).
patching file src/util.c
Hunk #4 succeeded at 190 with fuzz 2.
Hunk #8 succeeded at 650 (offset -27 lines).
patching file tests/help-version
Hunk #1 succeeded at 75 (offset 1 line).
Hunk #2 succeeded at 85 (offset 1 line).
Hunk #3 succeeded at 96 (offset 1 line).
Hunk #4 succeeded at 108 (offset 1 line).
Hunk #5 succeeded at 140 (offset 1 line).
Hunk #6 succeeded at 188 (offset 1 line).

